name: Create and publish CSS Request Monitor image

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'request-monitor/**'
      - 'request-monitor/Dockerfile'
      - 'helm/**'
      - '.github/workflows/publish-image-request-monitor.yaml'

env:
  GITHUB_REGISTRY: ghcr.io
  IMAGE_NAME: bcgov/sso-requests-monitor

jobs:
  build-and-push-image:
    permissions: write-all
    runs-on: ubuntu-24.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: hmarr/debug-action@v3
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        id: release
        uses: rymndhng/release-on-push-action@v0.28.0
        with:
          bump_version_scheme: 'patch'
          tag_prefix: 'v'
          use_github_release_notes: 'true'
          release_name: 'Release <RELEASE_VERSION>'
          max_commits: 100 # default is 50

      - id: get-tag
        name: Get Tag
        run: |
          echo "release_tag=${{ endsWith(github.ref, '/main') && steps.release.outputs.tag_name || steps.meta.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./request-monitor
          file: Dockerfile
          push: true
          tags: ${{ env.GITHUB_REGISTRY }}/${{env.IMAGE_NAME}}:dev
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

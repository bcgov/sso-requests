name: Set CSS in Maintenance Mode

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The target branch from which to deploy'
        required: true
        type: choice
        options: ['dev', 'prod']
        default: 'dev'
      maintenanceEnabled:
        description: 'If true, the CSS app will be in maintenance mode.'
        type: boolean
        required: false
        default: false

env:
  GITHUB_REGISTRY: ghcr.io
  IMAGE_NAME: bcgov/sso-requests

jobs:
  build-and-push-image:
    permissions: write-all
    runs-on: ubuntu-24.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: hmarr/debug-action@v3
      - uses: actions/checkout@v4
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: mirror
          kam: latest
          oc: 4.18.7

      - name: Set env to development
        if: ${{endsWith(github.ref,'/dev') && github.event.inputs.environment  == 'dev' }}
        run: |
          cat >> $GITHUB_ENV <<EOF
          OPENSHIFT_TOKEN=${{ secrets.DEV_OPENSHIFT_TOKEN }}
          OPENSHIFT_NAMESPACE=${{ secrets.DEV_OPENSHIFT_NAMESPACE }}
          EOF

      - name: Set env to production
        if: ${{endsWith(github.ref,'/main') && github.event.inputs.environment  == 'prod' }}
        run: |
          cat >> $GITHUB_ENV <<EOF
          OPENSHIFT_TOKEN=${{ secrets.PROD_OPENSHIFT_TOKEN }}
          OPENSHIFT_NAMESPACE=${{ secrets.PROD_OPENSHIFT_NAMESPACE }}
          EOF

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          insecure_skip_tls_verify: true

      - name: Set CSS in Maintenance Mode
        run: |
          namespace=${{ env.OPENSHIFT_NAMESPACE }}
          oc set env deployment/sso-requests MAINTENANCE_MODE_ACTIVE=true -n ${namespace}
        working-directory: .

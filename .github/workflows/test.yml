name: Run Tests and Lints

on: [push, pull_request]

jobs:
  test_pre-commit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache Node dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install asdf requirements
        run: |
          sudo apt-get install -y libssl-dev libreadline-dev uuid-dev

      - name: Install asdf
        uses: asdf-vm/actions/setup@v3
      - name: Cache asdf tools
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.asdf
          key: ${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}

      - name: Install asdf
        uses: asdf-vm/actions/install@v3

      - name: Rerun Pre-Commit Hooks on CI
        run: |
          pip install -r requirements.txt
          asdf reshim
          pre-commit run --color=always --show-diff-on-failure --all-files

      - name: Install dependencies for frontend
        run: make app_install

      - name: Run frontend unit tests
        run: |
          yarn test --coverage
        working-directory: ./app

      - name: Setup postgres
        env:
          PGUSER: postgres
        run: |
          pg_ctl start
          createdb runner || true
          chmod +x ./db-setup.sh
          ./db-setup.sh ssorequests_test
        working-directory: ./.bin

      - name: Run backend integration tests
        env:
          PGUSER: postgres
          DATABASE_URL: 'postgresql://localhost:5432/ssorequests_test'
        run: |
          yarn test-api --coverage
        working-directory: ./app

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          slug: bcgov/sso-requests
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./app/coverage/lcov.info, ./lambda/coverage/lcov.info
          flags: unitests
          name: codecov
          fail_ci_if_error: false
          verbose: true

  commitlint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5
